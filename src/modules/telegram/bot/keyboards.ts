import { configurations } from "../../../config/index";

export const subscription_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "üì¢ Kanalga obuna bo'lish",
                        url: configurations.telegram.channelLink,
                    },
                ],
                [
                    {
                        text: "‚úÖ Tekshirish",
                        callback_data: "check_subscription",
                    },
                ],
            ],
        },
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª",
                        url: configurations.telegram.channelLink,
                    },
                ],
                [
                    {
                        text: "‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
                        callback_data: "check_subscription",
                    },
                ],
            ],
        },
    },
    en: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "üì¢ Subscribe to channel",
                        url: configurations.telegram.channelLink,
                    },
                ],
                [
                    {
                        text: "‚úÖ Check",
                        callback_data: "check_subscription",
                    },
                ],
            ],
        },
    },
};

export const language_keyboard = {
    reply_markup: {
        inline_keyboard: [
            [
                {
                    text: "–†—É—Å—Å–∫–∏–π",
                    callback_data: "ru",
                },
                {
                    text: "–£–∑–±–µ–∫—Å–∫–∏–π",
                    callback_data: "uz",
                },
            ],
        ],
    },
    parse_mode: "HTML",
}

export const contact_keyboard = {
    uz: {
        reply_markup: {
            keyboard: [[{ text: "üìû Raqamni ulashish", request_contact: true }]],
            resize_keyboard: true,
            one_time_keyboard: true,
        },
    },
    ru: {
        reply_markup: {
            keyboard: [[{ text: "üìû –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact: true }]],
            resize_keyboard: true,
            one_time_keyboard: true,
        },
    },
    en: {
        reply_markup: {
            keyboard: [
                [{ text: "üìû Share your phone number", request_contact: true }],
            ],
            resize_keyboard: true,
            one_time_keyboard: true,
        },
    },
};

export const register_type_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "Korxona",
                        callback_data: "enterprise",
                    },
                    {
                        text: "Ishchi",
                        callback_data: "worker",
                    },
                ],
            ],
        },
        parse_mode: "HTML",
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ",
                        callback_data: "enterprise",
                    },
                    {
                        text: "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç",
                        callback_data: "worker",
                    },
                ],
            ],
        },
        parse_mode: "HTML",
    },
}

export const worker_menu_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "Ish qidirish",
                        callback_data: "search-work",
                    },
                ],
                [
                    {
                        text: "Malumotlarimni tahrirlash",
                        callback_data: "settings",
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "–ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç—ã",
                        callback_data: "search-work",
                    },
                ],
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å –º–æ—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
                        callback_data: "settings",
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
}

export const vote_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "Ha",
                        callback_data: "yes"
                    },
                    {
                        text: "Yo'q",
                        callback_data: "no"
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "–î–∞",
                        callback_data: "yes"
                    },
                    {
                        text: "–ù–µ—Ç",
                        callback_data: "no"
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
}

export const gender_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "Erkak",
                        callback_data: "male"
                    },
                    {
                        text: "Ayol",
                        callback_data: "female"
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "–ú—É–∂—Å–∫–æ–π",
                        callback_data: "male"
                    },
                    {
                        text: "–ñ–µ–Ω—Å–∫–∏–π",
                        callback_data: "female"
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
}

export const enterprise_menu_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "Yangi vakansiya qo'shish",
                        callback_data: "new-vacancy",
                    },
                ],
                [
                    {
                        text: "Ishchilar qidirish",
                        callback_data: "search-worker",
                    },
                ],
                [
                    {
                        text: "Ma'lumotlarimni tahrirlash",
                        callback_data: "settings",
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é",
                        callback_data: "new-vacancy",
                    },
                ],
                [
                    {
                        text: "–ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤",
                        callback_data: "search-worker",
                    },
                ],
                [
                    {
                        text: "–û –Ω–∞—Å",
                        callback_data: "about",
                    },
                ],
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å –º–æ—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
                        callback_data: "settings",
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
}

export const worker_settings_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "Ismingizni tahrirlash",
                        callback_data: "worker-edit-fullname",
                    },
                ],
                [
                    {
                        text: "Tug'ilgan sanaingizni tahrirlash",
                        callback_data: "worker-edit-birthdate",
                    },
                ],
                [
                    {
                        text: "Yashash manzilingizni tahrirlash",
                        callback_data: "worker-edit-residential-address",
                    },
                ],
                [
                    {
                        text: "Ishlash manzilini tahrirlash",
                        callback_data: "worker-edit-working-area",
                    },
                ],
                [
                    {
                        text: "Pasport seriya raqamingizni tahrirlash",
                        callback_data: "worker-edit-passport-serial-number",
                    },
                ],
                [
                    {
                        text: "Jinsingizni tahrirlash",
                        callback_data: "worker-edit-gender",
                    },
                ],
                [
                    {
                        text: "Mutaxasislikingizni tahrirlash",
                        callback_data: "worker-edit-specialization",
                    },
                ],

                [
                    {
                        text: "Tajribangizni tahrirlash",
                        callback_data: "worker-edit-experience",
                    },
                ],
                [
                    {
                        text: "Qo'shimcha xunarlaringizni tahrirlash",
                        callback_data: "worker-edit-additional-skills",
                    },
                ],
                [
                    {
                        text: "Minimal maoshingizni tahrirlash",
                        callback_data: "worker-edit-minimum-wage",
                    },
                ],
                [
                    {
                        text: "Boshqa shaharda ishlashni hohlaysizmi?",
                        callback_data: "worker-edit-work-in-a-city-other-than-the-residential-address",
                    },
                ],
            ],
        },
        parse_mode: "HTML",
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è",
                        callback_data: "worker-edit-fullname",
                    },
                ],
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è",
                        callback_data: "worker-edit-birthdate",
                    }
                ],
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è",
                        callback_data: "worker-edit-residential-address",
                    }
                ],
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å c–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –∞–¥—Ä–µ—Å",
                        callback_data: "worker-edit-working-area",
                    }
                ],
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å —Å–µ—Ä–∏—é –∏ –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞",
                        callback_data: "worker-edit-passport-serial-number",
                    }
                ],
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –ø–æ–ª",
                        callback_data: "worker-edit-gender",
                    }
                ],
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é",
                        callback_data: "worker-edit-specialization",
                    }
                ],

                [
                    {
                        text: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –æ–ø—ã—Ç",
                        callback_data: "worker-edit-experience",
                    }
                ],
                [
                    {
                        text: "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Å–≤–æ–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏",
                        callback_data: "worker-edit-additional-skills",
                    }
                ],
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∑–∞—Ä–ø–ª–∞—Ç—É",
                        callback_data: "worker-edit-minimum-wage",
                    }
                ],
                [
                    {
                        text: "–•–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –¥—Ä—É–≥–æ–º –≥–æ—Ä–æ–¥–µ?",
                        callback_data: "worker-edit-work-in-a-city-other-than-the-residential-address",
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
}

export const enterprise_settings_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "Korxona nomini tahrirlash",
                        callback_data: "enterprise-edit-fullname",
                    },
                ],
                [
                    {
                        text: "Korxona manzilini tahrirlash",
                        callback_data: "enterprise-edit-address",
                    }
                ],
                [
                    {
                        text: "Korxona faoliyat turini tahrirlash",
                        callback_data: "enterprise-edit-type-of-activity",
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏",
                        callback_data: "enterprise-edit-fullname",
                    },
                ],
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏",
                        callback_data: "enterprise-edit-address",
                    }
                ],
                [
                    {
                        text: "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø –±–∏–∑–Ω–µ—Å–∞",
                        callback_data: "enterprise-edit-type-of-activity",
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
}

// Function to generate vacancy selection buttons
export const generate_vacancy_buttons = (count: number, pageSize: number, startIndex: number) => {
    // Define proper types for the buttons and rows
    type Button = { text: string; callback_data: string };
    const rows: Button[][] = [];
    
    // Create number buttons (3 per row)
    const buttonsPerRow = 3;
    for (let i = 0; i < count; i++) {
        // Show numbers from 1-6 on each page (relative position)
        const displayNumber = i + 1;
        
        const button: Button = {
            // Show position 1-6 on the button
            text: `${displayNumber}`,
            // Use position 1-6 as callback data
            callback_data: `${displayNumber}`
        };
        
        // Create a new row for every 3 buttons
        if (i % buttonsPerRow === 0) {
            rows.push([]);
        }
        
        // Add button to the last row
        rows[Math.floor(i / buttonsPerRow)].push(button);
    }
    
    return rows;
};

export const location_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "Andijon viloyati", callback_data: "location_Andijon" },
                    { text: "Buxoro viloyati", callback_data: "location_Buxoro" }
                ],
                [
                    { text: "Farg`ona viloyati", callback_data: "location_Farg`ona" },
                    { text: "Sirdaryo viloyati", callback_data: "location_Sirdaryo" }
                ],
                [
                    { text: "Jizzax viloyati", callback_data: "location_Jizzax" },
                    { text: "Namangan viloyati", callback_data: "location_Namangan" }
                ],
                [
                    { text: "Navoiy viloyati", callback_data: "location_Navoiy" },
                    { text: "Qoraqalpog'iston Res.", callback_data: "location_Qoraqalpogiston" }
                ],
                [
                    { text: "Qashqadaryo viloyati", callback_data: "location_Qashqadaryo" },
                    { text: "Samarqand viloyati", callback_data: "location_Samarqand" }
                ],
                [
                    { text: "Surxondaryo viloyati", callback_data: "location_Surxondaryo" },
                    { text: "Toshkent viloyati", callback_data: "location_Toshkent_Viloyati" }
                ],
                [
                    { text: "Toshkent Shahri", callback_data: "location_Toshkent_Shahri" },
                    { text: "Xorazm viloyati", callback_data: "location_Xorazm" }
                ]
            ],
        },
        parse_mode: "HTML",
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "–ê–Ω–¥–∏–∂–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data: "location_Andijon" },
                    { text: "–ë—É—Ö–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data: "location_Buxoro" }
                ],
                [
                    { text: "–§–µ—Ä–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data: "location_Farg`ona" },
                    { text: "–°—ã—Ä–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data: "location_Sirdaryo" }
                ],
                [
                    { text: "–î–∂–∏–∑–∞–∫—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data: "location_Jizzax" },
                    { text: "–ù–∞–º–∞–Ω–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data: "location_Namangan" }
                ],
                [
                    { text: "–ù–∞–≤–æ–∏–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data: "location_Navoiy" },
                    { text: "–ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å—Ç–∞–Ω", callback_data: "location_Qoraqalpogiston" }
                ],
                [
                    { text: "–ö–∞—à–∫–∞–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data: "location_Qashqadaryo" },
                    { text: "–°–∞–º–∞—Ä–∫–∞–Ω–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data: "location_Samarqand" }
                ],
                [
                    { text: "–°—É—Ä—Ö–∞–Ω–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data: "location_Surxondaryo" },
                    { text: "–¢–∞—à–∫–µ–Ω—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data: "location_Toshkent_Viloyati" }
                ],
                [
                    { text: "–ì–æ—Ä–æ–¥ –¢–∞—à–∫–µ–Ω—Ç", callback_data: "location_Toshkent_Shahri" },
                    { text: "–•–æ—Ä–µ–∑–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", callback_data: "location_Xorazm" }
                ]
            ],
        },
        parse_mode: "HTML",
    }
};

export const back_to_menu_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "Bosh menyuga qaytish",
                        callback_data: "back-to-menu",
                    },
                ],
            ],
        },
        parse_mode: "HTML",
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        callback_data: "back-to-menu",
                    },
                ],
            ],
        },
        parse_mode: "HTML",
    },
}

export const vacancy_type_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "üíº Bo‚Äòsh ish o‚Äòrni",
                        callback_data: "vacancy-type-work"
                    },
                    {
                        text: "üß† Shogird kerak",
                        callback_data: "vacancy-type-student"
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "üíº –í–∞–∫–∞–Ω—Å–∏—è",
                        callback_data: "vacancy-type-work"
                    },
                    {
                        text: "üß† –ù—É–∂–µ–Ω —É—á–µ–Ω–∏–∫",
                        callback_data: "vacancy-type-student"
                    }
                ]
            ],
        },
        parse_mode: "HTML",
    },
}

export const worker_count_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: '1', callback_data: 'worker-count-1' },
                    { text: '2', callback_data: 'worker-count-2' },
                    { text: '3', callback_data: 'worker-count-3' },
                ],
                [
                    { text: '4', callback_data: 'worker-count-4' },
                    { text: '5', callback_data: 'worker-count-5' },
                    { text: '6', callback_data: 'worker-count-6' },
                ],
                [
                    { text: '7', callback_data: 'worker-count-7' },
                    { text: '8', callback_data: 'worker-count-8' },
                    { text: '9', callback_data: 'worker-count-9' },
                ],
                [
                    { text: '10+', callback_data: 'worker-count-10' },
                ]
            ],
        },
        parse_mode: 'HTML',
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: '1', callback_data: 'worker-count-1' },
                    { text: '2', callback_data: 'worker-count-2' },
                    { text: '3', callback_data: 'worker-count-3' },
                ],
                [
                    { text: '4', callback_data: 'worker-count-4' },
                    { text: '5', callback_data: 'worker-count-5' },
                    { text: '6', callback_data: 'worker-count-6' },
                ],
                [
                    { text: '7', callback_data: 'worker-count-7' },
                    { text: '8', callback_data: 'worker-count-8' },
                    { text: '9', callback_data: 'worker-count-9' },
                ],
                [
                    { text: '10+', callback_data: 'worker-count-10' },
                ]
            ],
        },
        parse_mode: 'HTML',
    },
}

export const job_opportunities_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "üçΩÔ∏è Tushlik",
                        callback_data: "select_opportunity:lunch",
                    }
                ],
                [
                    {
                        text: "üìà Karyera o'sishi",
                        callback_data: "select_opportunity:career",
                    }
                ],
                [
                    {
                        text: "üè® Boshqa shaharliklarga mehmonxona",
                        callback_data: "select_opportunity:hotel",
                    }
                ],
                [
                    {
                        text: "üç≤ Kuniga 3 mahal ovqat",
                        callback_data: "select_opportunity:meals",
                    }
                ],
            ],
        },
        parse_mode: "HTML",
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "üçΩÔ∏è –û–±–µ–¥",
                        callback_data: "select_opportunity:lunch",
                    }
                ],
                [
                    {
                        text: "üìà –ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç",
                        callback_data: "select_opportunity:career",
                    }
                ],
                [
                    {
                        text: "üè® –î–ª—è –∏–Ω–æ–≥–æ—Ä–æ–¥–Ω–∏—Ö —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è —Å —É–¥–æ–±—Å—Ç–≤–∞–º–∏",
                        callback_data: "select_opportunity:hotel",
                    }
                ],
                [
                    {
                        text: "üç≤ 3—Ö —Ä–∞–∑–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ",
                        callback_data: "select_opportunity:meals",
                    }
                ],
            ],
        },
        parse_mode: "HTML",
    },
};

export const experience_level_keyboard = {
    uz: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "Tajribasiz",
                        callback_data: "experience:0",
                    }
                ],
                [
                    {
                        text: "1 yildan boshlab",
                        callback_data: "experience:1",
                    }
                ],
                [
                    {
                        text: "2 yildan boshlab",
                        callback_data: "experience:2",
                    }
                ],
                [
                    {
                        text: "5 yildan va undan yuqori",
                        callback_data: "experience:5",
                    }
                ],
            ],
        },
        parse_mode: "HTML",
    },
    ru: {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "–ë–µ–∑ –æ–ø—ã—Ç–∞",
                        callback_data: "experience:0",
                    }
                ],
                [
                    {
                        text: "–û—Ç 1 –≥–æ–¥–∞",
                        callback_data: "experience:1",
                    }
                ],
                [
                    {
                        text: "–û—Ç 2 –≥–æ–¥–∞",
                        callback_data: "experience:2",
                    }
                ],
                [
                    {
                        text: "–û—Ç 5 –∏ –≤—ã—à–µ",
                        callback_data: "experience:5",
                    }
                ],
            ],
        },
        parse_mode: "HTML",
    },
};

export const vacancy_pagination_keyboard = {
    uz: (page: number, hasNext: boolean, itemCount: number = 0) => ({
        reply_markup: {
            inline_keyboard: [
                ...generate_vacancy_buttons(Math.min(itemCount, 6), 6, (page - 1) * 6),
                [
                    page > 1 ? {
                        text: "‚¨ÖÔ∏è Oldingi",
                        callback_data: `prev_page_${page-1}`,
                    } : { text: " ", callback_data: "no_action" },
                    { 
                        text: `üìÑ ${page}`, 
                        callback_data: "current_page" 
                    },
                    hasNext ? {
                        text: "Keyingi ‚û°Ô∏è",
                        callback_data: `next_page_${page+1}`,
                    } : { text: " ", callback_data: "no_action" },
                ],
                [
                    {
                        text: "üîç Qidiruvni yakunlash",
                        callback_data: "finish_search",
                    },
                ],
            ],
        },
        parse_mode: "HTML",
    }),
    ru: (page: number, hasNext: boolean, itemCount: number = 0) => ({
        reply_markup: {
            inline_keyboard: [
                ...generate_vacancy_buttons(Math.min(itemCount, 6), 6, (page - 1) * 6),
                [
                    page > 1 ? {
                        text: "‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π",
                        callback_data: `prev_page_${page-1}`,
                    } : { text: " ", callback_data: "no_action" },
                    { 
                        text: `üìÑ ${page}`, 
                        callback_data: "current_page" 
                    },
                    hasNext ? {
                        text: "–°–ª–µ–¥—É—é—â–∏–π ‚û°Ô∏è",
                        callback_data: `next_page_${page+1}`,
                    } : { text: " ", callback_data: "no_action" },
                ],
                [
                    {
                        text: "üîç –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∏—Å–∫",
                        callback_data: "finish_search",
                    },
                ],
            ],
        },
        parse_mode: "HTML",
    }),
}
        
    